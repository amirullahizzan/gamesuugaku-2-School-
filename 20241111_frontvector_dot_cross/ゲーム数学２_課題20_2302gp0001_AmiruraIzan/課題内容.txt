
----------------------------------------------------------------------
ゲーム数学２　課題　ベクトルの外積を使ったカメラ移動
----------------------------------------------------------------------

提出期限：１時間後（できているところまでの提出で構いません、そのあと解説していきます）
提出場所：teams->ゲーム数学２->授業（本日）->ファイル->提出

プロジェクトフォルダの名前を【 プロジェクト名_番号_自分の名前 】のように変更して提出してください。
（例えば【 ゲーム数学２_課題00_00000000_○○○○○ 】みたいな感じで）


以下の変更を実装することで【 こういう感じで.exe 】のような挙動になるようにしてください。


課題１：マウス右ドラッグ：カメラの向きに対してカメラ座標の左右移動（離したら戻る）：カメラクラス

	現状のカメラは、プレイヤーの後ろになるように座標や向きを設定しています。

	そのカメラを、マウスの「右ドラッグ」でカメラの向きに対して左右に移動させます。

	（ボタンを離したら元に戻す必要があるので「こういう感じで.exe」では、
	　カメラ座標をずらす用の変数を用意しています：例えば：Float3 m_offset; みたいな）

	プレイヤーの処理を参考にして、マウスの右ドラッグで m_offset の値を変更します。

	カメラ座標（ m_pos ）と m_offset をカメラ座標として設定関数に渡します。
	↓こんな感じで
	Float3 pos = m_pos + m_offset;
	SetCameraPositionAndAngle( pos.VGet(), TO_RADIAN( m_rot.x ), TO_RADIAN( m_rot.y ), TO_RADIAN( m_rot.z ) );

	で、マウス右ボタンを押していないときは m_offset の値を 0.0f に近づけていきます。


課題２：ＱＥキー：向きを変えずに左右移動（ダッシュ）：プレイヤークラス

	現状は、ＡＤキーで左右移動をしているプレイヤーですが、
	ＱＥキーを押したら、その左右方向にダッシュアするような座標移動をさせます。
	（「こういう感じで.exe」では、ダッシュ用の変数を使っています。例えば Float3 m_dash; みたいな）

	で、ＱＥキーを押した瞬間左右方向に一定量の大きさの移動ベクトルにして
	キーを押している時の移動とは別にその移動ベクトル分の座標移動もさせます。

	Player.cpp の上の方でダッシュスピードの定数を用意しています。
	↓これ
	#define PLAYER_DASH_SPEED	0.5f

	そのダッシュ移動量は徐々に 0.0f に近づけていきます。


各処理に関して、既に宣言してある変数や関数だけでは処理が実装できない場合、
各自で変数や関数を追加した上で実装をおこなってください。
座標や色・スピードなど細かい数値の指定は特にないので、各自でいい感じの数値を設定することで
【 こういう感じで.exe 】のような動きになるように実装してください。

----------------------------------------------------------------------
発展課題
----------------------------------------------------------------------

ＮＰＣが画面を向くように、ＮＰＣの向きをカメラの向きの逆にする

	カメラの向きをＮＰＣが見れるようにする必要があります。
	（「こういう感じで（発展）.exe」では、ＮＰＣの更新処理関数にカメラの向きを渡しています）


プレイヤーが近づいたらＮＰＣは一定時間右か左に移動する（プレイヤーから離れるように）

	Npc.cpp の上の方に距離の定数を用意しています。
	↓これ
	//	プレイヤーとＮＰＣがこの距離以下だったら左右移動
	#define MOVE_LENGTH	3.0f

	プレイヤー座標をＮＰＣが見れるようにする必要があります。
	（「こういう感じで（発展）.exe」では、ＮＰＣの更新処理関数にプレイヤー座標を渡しています）
	一定時間を見る用の変数が必要になります。

	プレイヤーから離れるように左右移動させる判断として、
	外積を使って判断する方法や
	ＮＰＣが画面のどこにいるかで判断する方法があります。（ ConvWorldPosToScreenPos を使って）
