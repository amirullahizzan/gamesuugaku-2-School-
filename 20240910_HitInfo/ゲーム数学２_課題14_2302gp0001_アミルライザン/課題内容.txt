
----------------------------------------------------------------------
ゲーム数学２　課題　線とモデルの当たり判定
----------------------------------------------------------------------

提出期限：１時間後（できているところまでの提出で構いません、そのあと解説していきます）
提出場所：teams->ゲーム数学２->授業（本日）->ファイル->提出

プロジェクトフォルダの名前を【 プロジェクト名_番号_自分の名前 】のように変更して提出してください。
（例えば【 ゲーム数学２_課題00_00000000_○○○○○ 】みたいな感じで）


以下の変更を実装することで【 こういう感じで.exe 】のような挙動になるようにしてください。


課題：カメラの先の方向の線と地面モデルの当たった場所を使った処理
	（「こういう感じで.exe」では、Game.cpp で実装しています）


	１：カメラが見ている方向の直線の先に地面がない時は円の描画はしない

		現状は、画面の真ん中に円の描画をしていますが常に描画され続けています。
		↓
		DrawCircle( SCREEN_W / 2, SCREEN_H / 2, 25.0f, GetColor( 255, 255, 0 ), FALSE );

		この円の描画を、カメラの先に伸びている線（カメラ座標から向いている先）と
		地面モデルが当たっている時のみ描画するように変更します。

		このプロジェクトのカメラは「カメラ座標」と「カメラの向き（角度）」の情報を持っています。
		（カメラクラスの更新処理では、十字キーを押すことでカメラのＸ軸回転とＹ軸回転角度の変更をしています）


	２：スペースキーでカメラの見ている先と地面が当たっている場所にプレイヤー設置

		１の実装でカメラの先の地面と当たっている座標が分かりますので
		スペースキーを押した時、その場所にプレイヤーを設置します。


	〇線と地面での当たり判定

		初期化処理
			当たり情報の作成		（ MV1SetupCollInfo ）

		更新処理
			当たり情報の更新		（ MV1RefreshCollInfo ）
			線とモデルの当たり判定	（ MV1CollCheck_Line ）


各処理に関して、既に宣言してある変数や関数だけでは処理が実装できない場合、
各自で変数や関数を追加した上で実装をおこなってください。
座標や色・スピードなど細かい数値の指定は特にないので、各自でいい感じの数値を設定することで
【 こういう感じで.exe 】のような動きになるように実装してください。

----------------------------------------------------------------------
発展課題
----------------------------------------------------------------------

	カメラの見ている先の地面が遠いほど円の半径を小さく


----------------------------------------------------------------------
発展課題２
----------------------------------------------------------------------

	スペースキーを押した後、一定時間たったらプレイヤージャンプ

		たくさんのキーを使うと操作がややこしくなりそうでしたので、
		スペースキーでプレイヤー座標の設定をした後にジャンプをさせていますが、
		「他のキーを押したらジャンプする」の実装でも問題ありません。

